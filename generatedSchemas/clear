Initializing your Neo4j Schema
This may take a few moments depending on the size of your DB
type Competency {
   _id: Long!
   default_weight: String!
   id: String!
   label: String!
   smartsheet_id: String!
   hasprimarydomain: [Domain] @relation(name: "hasPrimaryDomain", direction: "OUT")
   hasPrimaryDomain_rel: [hasPrimaryDomain]
   hastargetcompetency: [TargetCompetency] @relation(name: "hasTargetCompetency", direction: "OUT")
   hasTargetCompetency_rel: [hasTargetCompetency]
   hasassessmentcriteria: [AssessmentCriteria] @relation(name: "hasAssessmentCriteria", direction: "OUT")
   hasAssessmentCriteria_rel: [hasAssessmentCriteria]
   hasshortname: [ShortName] @relation(name: "hasShortName", direction: "OUT")
   hasShortName_rel: [hasShortName]
   haslv0activities: [Lv0Activities] @relation(name: "hasLv0Activities", direction: "OUT")
   hasLv0Activities_rel: [hasLv0Activities]
   haslv1activities: [Lv1Activities] @relation(name: "hasLv1Activities", direction: "OUT")
   hasLv1Activities_rel: [hasLv1Activities]
   haslv2activities: [Lv2Activities] @relation(name: "hasLv2Activities", direction: "OUT")
   hasLv2Activities_rel: [hasLv2Activities]
   haslv3activities: [Lv3Activities] @relation(name: "hasLv3Activities", direction: "OUT")
   hasLv3Activities_rel: [hasLv3Activities]
   haslv4activities: [Lv4Activities] @relation(name: "hasLv4Activities", direction: "OUT")
   hasLv4Activities_rel: [hasLv4Activities]
   haslv5activities: [Lv5Activities] @relation(name: "hasLv5Activities", direction: "OUT")
   hasLv5Activities_rel: [hasLv5Activities]
   ingroup: [CompetencyGroup] @relation(name: "inGroup", direction: "OUT")
}

type TargetCompetency {
   _id: Long!
   id: String!
   label: String!
   label_created: String!
   label_es_created: String
   label_es_modified: String
   label_fr: String
   label_fr_created: String
   label_fr_modified: String
   label_modified: String!
   competencys: [Competency] @relation(name: "hasTargetCompetency", direction: "IN")
}

type AssessmentCriteria {
   _id: Long!
   id: String!
   label: String!
   label_created: String!
   label_es_created: String
   label_es_modified: String
   label_fr: String
   label_fr_created: String
   label_fr_modified: String
   label_modified: String!
   competencys: [Competency] @relation(name: "hasAssessmentCriteria", direction: "IN")
}

type ShortName {
   _id: Long!
   id: String!
   label: String!
   label_created: String!
   label_es_created: String
   label_es_modified: String
   label_fr: String
   label_fr_created: String
   label_fr_modified: String
   label_modified: String!
   competencys: [Competency] @relation(name: "hasShortName", direction: "IN")
}

type Lv0Activities {
   _id: Long!
   id: String!
   label_created: String!
   label_es_created: String
   label_es_modified: String
   label_fr: String
   label_fr_created: String
   label_fr_modified: String
   label_modified: String!
   competencys: [Competency] @relation(name: "hasLv0Activities", direction: "IN")
}

type Lv1Activities {
   _id: Long!
   id: String!
   label: String!
   label_created: String!
   label_es_created: String
   label_es_modified: String
   label_fr: String
   label_fr_created: String
   label_fr_modified: String
   label_modified: String!
   competencys: [Competency] @relation(name: "hasLv1Activities", direction: "IN")
}

type Lv2Activities {
   _id: Long!
   id: String!
   label: String!
   label_created: String!
   label_es_created: String
   label_es_modified: String
   label_fr: String
   label_fr_created: String
   label_fr_modified: String
   label_modified: String!
   competencys: [Competency] @relation(name: "hasLv2Activities", direction: "IN")
}

type Lv3Activities {
   _id: Long!
   id: String!
   label: String!
   label_created: String!
   label_es_created: String
   label_es_modified: String
   label_fr: String
   label_fr_created: String
   label_fr_modified: String
   label_modified: String!
   competencys: [Competency] @relation(name: "hasLv3Activities", direction: "IN")
}

type Lv4Activities {
   _id: Long!
   id: String!
   label: String!
   label_created: String!
   label_es_created: String
   label_es_modified: String
   label_fr: String
   label_fr_created: String
   label_fr_modified: String
   label_modified: String!
   competencys: [Competency] @relation(name: "hasLv4Activities", direction: "IN")
}

type Lv5Activities {
   _id: Long!
   id: String!
   label: String!
   label_created: String!
   label_es_created: String
   label_es_modified: String
   label_fr: String
   label_fr_created: String
   label_fr_modified: String
   label_modified: String!
   competencys: [Competency] @relation(name: "hasLv5Activities", direction: "IN")
}

type Plan {
   _id: Long!
   id: String!
   label: String
   label_fr: String
   plan_class: String!
   hascomplist: [CompetencyGroup] @relation(name: "hasCompList", direction: "OUT")
   hasCompList_rel: [hasCompList]
}

type CompetencyGroup {
   _id: Long!
   id: String!
   label: String
   level: String
   parent_id: String
   smartsheet_id: String!
   ingroup: [CompetencyGroup] @relation(name: "inGroup", direction: "OUT")
   plans: [Plan] @relation(name: "hasCompList", direction: "IN")
}

type Domain {
   _id: Long!
   id: String!
   label: String
   label_fr: String
   competencys: [Competency] @relation(name: "hasPrimaryDomain", direction: "IN")
}

type hasPrimaryDomain @relation(name: "hasPrimaryDomain") {
  from: Competency!
  to: Domain!
  from: DateTime
}

type hasTargetCompetency @relation(name: "hasTargetCompetency") {
  from: Competency!
  to: TargetCompetency!
  from: DateTime!
}

type hasAssessmentCriteria @relation(name: "hasAssessmentCriteria") {
  from: Competency!
  to: AssessmentCriteria!
  from: DateTime!
}

type hasShortName @relation(name: "hasShortName") {
  from: Competency!
  to: ShortName!
  from: DateTime!
}

type hasLv0Activities @relation(name: "hasLv0Activities") {
  from: Competency!
  to: Lv0Activities!
  from: DateTime!
}

type hasLv1Activities @relation(name: "hasLv1Activities") {
  from: Competency!
  to: Lv1Activities!
  from: DateTime!
}

type hasLv2Activities @relation(name: "hasLv2Activities") {
  from: Competency!
  to: Lv2Activities!
  from: DateTime!
}

type hasLv3Activities @relation(name: "hasLv3Activities") {
  from: Competency!
  to: Lv3Activities!
  from: DateTime!
}

type hasLv4Activities @relation(name: "hasLv4Activities") {
  from: Competency!
  to: Lv4Activities!
  from: DateTime!
}

type hasLv5Activities @relation(name: "hasLv5Activities") {
  from: Competency!
  to: Lv5Activities!
  from: DateTime!
}

type hasCompList @relation(name: "hasCompList") {
  from: Plan!
  to: CompetencyGroup!
  from: DateTime!
  planId: String!
}




